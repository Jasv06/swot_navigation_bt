GlobalPlanner:                                  # Also see: http://wiki.ros.org/global_planner

  use_quadratic: true                           # Use the quadratic approximation of the potential. Otherwise, use a simpler calculation, default true
  use_dijkstra: true                        # Use dijkstra's algorithm. Otherwise, A*, default true
  use_grid_path: false                       # Create a path that follows the grid boundaries. Otherwise, use a gradient descent method, default false
    
#### orientation interpolation : (None=0, Forward=1, Interpolate=2, ForwardThenInterpolate=3, Backward=4, Leftward=5, Rightward=6) -->
  orientation_mode: 3                          # default 0 todo 12.05.23: test 0,1,2
  orientation_window_size: 1                    # default 1
  allow_unknown: false                          # Allow planner to plan through unknown space, default true  MARCO - should be false???

# Needs to have track_unknown_space: true in the obstacle / voxel layer (in costmap_commons_param) to work
  old_navfn_behavior: false                     # Exactly mirror behavior of navfn, use defaults for other boolean parameters, default false
  planner_window_x: 0.0                         # default 0.0
  planner_window_y: 0.0                         # default 0.0
  default_tolerance: 0.0                      # If goal in obstacle, plan to the closest point in radius default_tolerance, default 0.0
  

  lethal_cost: 253                              # default 253
  neutral_cost: 50                              # default 50
  cost_factor: 2.0                             # Factor to multiply each cost from costmap by, default 3.0

# For Visualization purpose only
  publish_potential: true                       # Publish Potential Costmap (this is not like the navfn pointcloud2 potential), default true
  visualize_potential: true                    # default false

